{"ast":null,"code":"var _jsxFileName = \"/home/yuriko/dev/eth/TokenSwapV1/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { Container, Typography, TextField, Button, Box } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fromToken, setFromToken] = useState('');\n  const [toToken, setToToken] = useState('');\n  const [amount, setAmount] = useState('');\n  const [swapResult, setSwapResult] = useState(null);\n  const handleSwap = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/swap', {\n        fromToken,\n        toToken,\n        amount\n      });\n      setSwapResult(response.data);\n    } catch (error) {\n      console.error('Swap error:', error);\n      setSwapResult({\n        error: error.message\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"ERC-20 Token Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"From Token Address\",\n        value: fromToken,\n        onChange: e => setFromToken(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"To Token Address\",\n        value: toToken,\n        onChange: e => setToToken(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Amount\",\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSwap,\n        children: \"Swap Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), swapResult && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Swap Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(swapResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z4pyqHQTKKRWgoaUTup/g1R6ToA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","Container","Typography","TextField","Button","Box","axios","jsxDEV","_jsxDEV","App","_s","fromToken","setFromToken","toToken","setToToken","amount","setAmount","swapResult","setSwapResult","handleSwap","response","post","data","error","console","message","maxWidth","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","autoComplete","fullWidth","label","value","onChange","e","target","margin","type","color","onClick","mt","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/yuriko/dev/eth/TokenSwapV1/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { Container, Typography, TextField, Button, Box } from '@mui/material';\nimport axios from 'axios';\n\nfunction App() {\n  const [fromToken, setFromToken] = useState('');\n  const [toToken, setToToken] = useState('');\n  const [amount, setAmount] = useState('');\n  const [swapResult, setSwapResult] = useState(null);\n\n  const handleSwap = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/swap', {\n        fromToken,\n        toToken,\n        amount\n      });\n      setSwapResult(response.data);\n    } catch (error) {\n      console.error('Swap error:', error);\n      setSwapResult({ error: error.message });\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        ERC-20 Token Swap\n      </Typography>\n      <Box component=\"form\" noValidate autoComplete=\"off\">\n        <TextField\n          fullWidth\n          label=\"From Token Address\"\n          value={fromToken}\n          onChange={(e) => setFromToken(e.target.value)}\n          margin=\"normal\"\n        />\n        <TextField\n          fullWidth\n          label=\"To Token Address\"\n          value={toToken}\n          onChange={(e) => setToToken(e.target.value)}\n          margin=\"normal\"\n        />\n        <TextField\n          fullWidth\n          label=\"Amount\"\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          margin=\"normal\"\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSwap}>\n          Swap Tokens\n        </Button>\n      </Box>\n      {swapResult && (\n        <Box mt={2}>\n          <Typography variant=\"h6\">Swap Result:</Typography>\n          <pre>{JSON.stringify(swapResult, null, 2)}</pre>\n        </Box>\n      )}\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}